proxy_cache_path /tmp/nginx_cache levels=1:2 keys_zone=cache:30m max_size=250m;
proxy_temp_path /tmp/nginx_proxy 1 2;
#
# http to https redirection for mysite site
#
server {
    listen 80;
    server_name mysite.eu www.mysite.eu;

    return 301 https://mysite.eu$request_uri;
}
#
# incoming local connections
#
server {
    listen 9800;
    allow 127.0.0.1;
    deny all;

    # proxy api/v1.0/ app requests to Puma listening to pumaproject.sock Unix socket
    location ~* /ilayer/v1/(.*)$ {
        proxy_pass http://unix:/tmp/pumaproject.sock:/ilayer/v1/$1$is_args$args;
        proxy_set_header Host $host;
        proxy_set_header If-Modified-Since $http_if_modified_since;
        proxy_cache cache;
    }
}

# mysite site
server {
        listen 443 ssl default_server;
        server_name mysite.eu www.mysite.eu;
        #
        # block access with IP address
        #
        if ($origin != "mysite.eu")  {
            return 404;
        }

        ssl_certificate /etc/ssl/mysite/viafacil.cert;
        ssl_certificate_key /etc/ssl/mysite/viafacil.key;

        ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
        ssl_prefer_server_ciphers on;

        client_max_body_size 100M;

        location / {
        #
        # main entry for any front-end application
        # proxy should be done here
        #
        }

        # proxy api/v1.0/ app requests to Puma listening  to pumaproject.sock Unix socket
        location ~* /ilayer/v1/(.*)$ {
                proxy_pass http://unix:/tmp/pumaproject.sock:/ilayer/v1/$1$is_args$args;
                proxy_set_header Host $host;
                proxy_set_header If-Modified-Since $http_if_modified_since;
                proxy_cache cache;

                auth_basic "Restricted Content";
                auth_basic_user_file /etc/nginx/.htpasswd;
        }

}
